/**
 * Created by bert on 22.03.16.
 */
/// <reference path="../typings/jasmine/jasmine.d.ts"/>
/// <reference path="../typings/underscore/underscore.d.ts"/>

import * as omm from "../src/omm"
import * as Tests from "../spec/classes/Tests"
import * as _ from "underscore"
import * as Mocks from "./Mocks"


xdescribe("The test omm", function () {
    var mockMongo : Mocks.MockMongo;
    var mockMeteor : Mocks.MockMeteor;

    beforeAll(function(){
        mockMongo = new Mocks.MockMongo();
        mockMeteor = new Mocks.MockMeteor();
        omm.config({
            Meteor:mockMeteor,
            Mongo:mockMongo
        });
        Tests.TestPersonCollection.init();
        Tests.TestTreeCollection.init();
        mockMeteor.runAllStartup();

    });

    it("configs the mock mongo", function () {
        expect(omm.getMongo()).toBe(mockMongo);
        expect(omm.getMongo().ObjectID()).toBe("1");
    });

    it("runs a test", function () {
        @omm.Entity
        class EClass{
        }
        var c = new omm.Collection(EClass, "users");
        expect(c.getMeteorCollection()['name']).toBe("users");
    });

    it("stores a thing", function () {
        @omm.Entity
        class EClass{
            jim:string;
        }
        var c = new omm.Collection(EClass, "assa");
        var ec = new EClass();
        ec.jim = "JIM";
        var id = c.insert( ec );
        expect(id).toBeDefined();
        expect(c.getById(id).jim).toBe("JIM");
    });

});
