{
  "name": "grunt-jasmine-node-coverage",
  "description": "Grunt task for running jasmine-node using istanbul for code coverage reports. Based off of grunt-jasmine-node by Omar Gonzalez (s9tpepper).",
  "version": "0.4.1",
  "homepage": "https://github.com/jribble/grunt-jasmine-node-coverage",
  "author": {
    "name": "Jarrod Ribble",
    "email": "jarrod.ribble@gmail.com"
  },
  "contributors": [
    {
      "name": "Juga Paazmaya",
      "email": "paazmaya@yahoo.com",
      "url": "http://paazmaya.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/jribble/grunt-jasmine-node-coverage.git"
  },
  "bugs": {
    "url": "https://github.com/jribble/grunt-jasmine-node-coverage/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jribble/grunt-jasmine-node-coverage/blob/master/LICENSE-MIT"
    }
  ],
  "main": "tasks/jasmine-node-task.js",
  "bin": {
    "grunt-jasmine-node-coverage": "bin/grunt-jasmine-node"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "files": [
    "bin",
    "tasks",
    "LICENSE-MIT",
    "package.json",
    "README.md"
  ],
  "dependencies": {
    "deepmerge": "~0.2",
    "istanbul": "~0.3",
    "jasmine-node": ">=1.14.0"
  },
  "devDependencies": {
    "grunt": "~0.4",
    "grunt-eslint": "~7.0"
  },
  "peerDependencies": {
    "grunt": "~0.4"
  },
  "keywords": [
    "gruntplugin",
    "grunt",
    "plugins",
    "builds",
    "ci",
    "jasmine",
    "jasmine-node",
    "istanbul",
    "coverage"
  ],
  "readme": "# grunt-jasmine-node-coverage\n\n> Runs jasmine-node with Istanbul code coverage\n\n[![Dependency Status](https://david-dm.org/jribble/grunt-jasmine-node-coverage.svg)](https://david-dm.org/jribble/grunt-jasmine-node-coverage)\n[![devDependency Status](https://david-dm.org/jribble/grunt-jasmine-node-coverage/dev-status.svg)](https://david-dm.org/jribble/grunt-jasmine-node-coverage#info=devDependencies)\n[![Build Status](https://travis-ci.org/jribble/grunt-jasmine-node-coverage.svg)](https://travis-ci.org/jribble/grunt-jasmine-node-coverage)\n[![Built with Grunt](http://img.shields.io/badge/Grunt-0.4-blue.svg?style=flat-square)](http://gruntjs.com/)\n[![Analytics](https://ga-beacon.appspot.com/UA-2643697-15/grunt-jasmine-node-coverage/index?flat)](https://github.com/igrigorik/ga-beacon)\n\nA [Grunt](http://gruntjs.com/) task to run your [Jasmine](http://jasmine.github.io/)\nfeature suite using [jasmine-node][]\nand [Istanbul](https://github.com/gotwarlost/istanbul) for code coverage reports.\n\n## Getting Started\n\nInstall this grunt plugin next to your project's `Gruntfile.js` with:\n\n```sh\nnpm install grunt-jasmine-node-coverage --save-dev\n```\n\nThen add these lines to your project's `Gruntfile.js` configuration file:\n\n```javascript\ngrunt.initConfig({\n  jasmine_node: {\n    task_name: {\n      options: {\n        coverage: {},\n        forceExit: true,\n        match: '.',\n        matchAll: false,\n        specFolders: ['tests'],\n        extensions: 'js',\n        specNameMatcher: 'spec',\n        captureExceptions: true,\n        junitreport: {\n          report: false,\n          savePath : './build/reports/jasmine/',\n          useDotNotation: true,\n          consolidate: true\n        }\n      },\n      src: ['**/*.js']\n    }\n  }\n});\n\ngrunt.loadNpmTasks('grunt-jasmine-node-coverage');\n\ngrunt.registerTask('default', 'jasmine_node');\n```\n\n## Configuring tasks\n\nGrunt tasks should be configured by following\n[the multi task configuration](http://gruntjs.com/creating-tasks#multi-tasks)\nform, thus wrapping each configuration in an object inside the `jasmine_node` root object.\n\n### Task configuration options\n\nMost of the options are passed throught to [jasmine-node][].\n\n\n#### options.projectRoot\n\nType: `string`\n\nDefault: `process.cwd()`\n\nSee http://nodejs.org/api/process.html#process_process_cwd\n\n\n#### options.specFolders\n\nType: `array`\n\nDefault: `[options.projectRoot]`\n\nList of folders in which any specs are looked for.\n\n\n#### options.useHelpers\n\nType: `boolean`\n\nDefault: `false`\n\n\n#### options.coverage\n\nType: `boolean|object`\n\nDefault: `false`\n\nIstanbul specific configuration. Use empty object,\n`{}` to use the defaults that are shown below.\n\n```js\n{\n  reportFile: 'coverage.json',\n  print: 'summary', // none, summary, detail, both\n  relativize: true,\n  thresholds: {\n    statements: 0,\n    branches: 0,\n    lines: 0,\n    functions: 0\n  },\n  reportDir: 'coverage',\n  report: [\n    'lcov'\n  ],\n  collect: [ // false to disable, paths are relative to 'reportDir'\n    '*coverage.json'\n  ],\n  excludes: []\n}\n```\n\nPlease note that `excludes` list will always be added `'**/node_modules/**'` internally.\n\n\n#### options.showColors\n\nType: `boolean`\n\nDefault: `false`\n\n\n#### options.isVerbose\n\nType: `boolean`\n\nDefault: `true`\n\nWhen `true` and `options.teamcity` is `false`, will use\n`TerminalVerboseReporter`, else `TerminalReporter`.\n\n\n#### options.forceExit\n\nType: `boolean`\n\nDefault: `false`\n\nExit on failure by skipping any asyncronous tasks pending.\n\n\n#### options.match\n\nType: `string`\n\nDefault: `'.'`\n\nused in the beginning of regular expression\n\n\n#### options.matchAll\n\nType: `boolean`\n\nDefault: `false`\n\nWhen true, `options.specFolders` and `options.specNameMatcher` are\nignored while building the `options.regExpSpec` which is then\nhanded down to jasmine-node.\n\n\n#### options.specNameMatcher\n\nType: `string`\n\nDefault: `'spec'`\n\nfilename expression\n\n\n#### options.extensions\n\nType: `string`\n\nDefault: `'js'`\n\nUsed in regular expressions after dot, inside (), thus | could be used\n\n\n#### options.captureExceptions\n\nType: `boolean`\n\nDefault: `false`\n\n\n#### options.junitreport\n\n```js\n{\n  report: false,\n  savePath: './reports/',\n  useDotNotation: true,\n  consolidate: true\n}\n```\n\n#### options.teamcity\n\nType: `boolean`\n\nDefault: `false`\n\nIf `true`, will be using `TeamcityReporter` instead of possible `isVerbose` option\n\nhttp://gotwarlost.github.io/istanbul/public/apidocs/classes/TeamcityReport.html\n\n\n#### options.growl\n\nType: `boolean`\n\nDefault: `false`\n\nWhen `true` will be adding `GrowlReporter`.\n\nSee https://github.com/mhevery/jasmine-node#growl-notifications\n\n\n#### options.useRequireJs\n\nType: `boolean`\n\nDefault: `false`\n\n\n#### options.onComplete\n\nType: `function`\n\nDefault: `null`\n\nWill be called on Terminal and Teamcity reporters and on RequireJS runner.\n\n\n#### options.includeStackTrace\n\nType: `boolean`\n\nDefault: `false`\n\nUsed only in `TerminalReporter`.\n\n\n#### options.coffee\n\nType: `boolean`\n\nDefault: `false`\n\nSeems to be currently (1.4.3) only supported in the command line options of [jasmine-node][].\n\n\n## Bugs\n\nHelp us to squash them by submitting an issue that describes how you encountered it;\nplease be as specific as possible including operating system, `node`, `grunt`, and\n`grunt-jasmine-node-coverage` versions.\n\n```sh\nnpm --versions\n```\n\n## Release History\n\n* v0.4.1  (2015-02-27)  Reports should be collected from where they were written #42\n* v0.4.0  (2015-02-19)  Other Grunt tasks were not ran when this failed, #40\n* v0.3.2  (2015-02-04)  Fixes for failure cases and documentation, #33, #36, #37 and #38\n* v0.3.1  (2014-11-21)  Installation failed. Should fix #30\n* v0.3.0  (2014-11-09)  Grunt usage as multi task. Fixes #12 and #18\n* v0.2.0  (2014-11-03)  Better Grunt API usage. Fixes #10, #13, #14, #16, #19 and #20\n* v0.1.11  (2014-05-15)  Task name fix for `grunt.renametask` use case\n* v0.1.10  (2014-04-07)  JSHint configuration and task exit fixes\n* v0.1.9  (2014-04-02)  `jasmine_node.options.isVerbose` was not working\n* v0.1.8  (2014-03-03)  Add captureExceptions support and quit on exception\n* v0.1.7  (2013-12-13)  Istanbul update, threshold configuration and JUNit output\n* v0.1.6  (2013-07-26)  Change `isVerbose` option to `verbose`\n* v0.1.5  (2013-07-15)  Initial coverage with Istanbul release, originally forked from `grunt-jasmine-node`\n\n\n## License\n\nCopyright (c) 2013 \"jribble\" Jarrod Ribble & contributors.\nBased on [grunt-jasmine-node](https://github.com/jasmine-contrib/grunt-jasmine-node).\n\nCopyright (c) 2012 \"s9tpepper\" Omar Gonzalez & contributors.\nLicensed under the MIT license.\n\n[jasmine-node]: https://github.com/mhevery/jasmine-node \"Integration of Jasmine Spec framework with Node.js\"\n",
  "readmeFilename": "README.md",
  "_id": "grunt-jasmine-node-coverage@0.4.1",
  "_shasum": "dc5d8d92393cbe64c8c0e373199d88ca4aa3bc94",
  "_from": "grunt-jasmine-node-coverage@^0.4.1",
  "_resolved": "https://registry.npmjs.org/grunt-jasmine-node-coverage/-/grunt-jasmine-node-coverage-0.4.1.tgz"
}
